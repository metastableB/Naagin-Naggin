This file is formatted for the `plaintasks` plugin (lots of love to you!) for Sublime Text 3. It is in markdown and any markdown editor should in principle be able to read/edit this file.
Development:
 ☐ Document configuration options specified in config.py
 ✔ ArgParser @done (17-03-31 14:15)
 ✔ Snake with increasing length @done (17-03-30 02:42)
 ✔ Head differently colored @done (17-03-30 02:42)
 ✔ Prevent reverse moves @done (17-03-30 02:42)
 ☐ Fix toggling between GUI and non GUI versions 
 ✔ Move score, foodScore and livingScore to gameState @done (17-03-30 02:42)
 ✔ Check if food is valid @done (17-03-30 02:43)
 ✔ Check if update causes death @done (17-03-30 02:43)
 ☐ Special power food
 ☐ Add border to cells
 ✔ Add gameover message @done (17-03-30 02:43)
 ☐ Add walls
 ☐ Add some graphics which actually looks like head/tail
 ☐ Typo; replace all 'cordinate' with 'coordinates'

Pertaining to Project:
  ✔ Implement manual play @done (17-03-30 02:43)
  ✔ Implement Reflex Agent @done (17-03-30 02:43)
  ☐ Implement intelligent adversary controlling food capsules so as to trap snake.
    ✔ Adversary maximizing Manhattan distance from snake @done (17-03-30 04:06)
    ☐ Adversary trying to place food in circular configurations formed by snake
    ☐ Adversary trying to place food near walls
  ☐ Implement adversarial search (minMax)
  Won't do. Can't be done in any reasonable way as getting the valid
  moves for such an adversary causes an infinite mutual recursion that can't
  be reasonably resolved. A evaluation function can be used to resolve this,
  but the number of moves the FoodAgent of its extensions can do are proportional
  to N^2.
  ☐ Implement expectimax search
  ☐ Implement MDP based Q-Learning
  ☐ Implement grids + MDP based Q-learning
  ☐ Train an image based Q-learning agent
